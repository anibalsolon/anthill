mas ants {
	
    agent queen {
    	ag-arch: anthill.Ant
    	instances: 0
    	focus: anthill, life
//    	roles: queen in anthillws.reproductor
    }
    
    agent maintainer {
    	ag-arch: anthill.Ant
    	instances: 0
    	focus: anthill, life
//    	roles: maintainer in anthillws.maintainer
    }
    
    agent wingedmale {
    	ag-arch: anthill.Ant
    	instances: 0
    	focus: anthill, life
//    	roles: wingedmale in anthillws.reproductor
    }
    
    agent worker {
    	ag-arch: anthill.Ant
    	instances: 5
    	focus: anthill, life
    	roles: picker in anthillws.foodpicker
    }
    
    agent larva {
    	ag-arch: anthill.Ant
    	instances: 0
    	focus: life
    }
    
	workspace anthillws {
		artifact anthill: anthill.Anthill
		artifact life: anthill.LifeTickTack
	}
	
	organisation anthillws: ants.xml {
		group ants: antgroup {
			group foodpicker: foodpicker {
				responsible-for: foodpicking
			}
			group reproductor: reproductor {
				responsible-for: reproducting
			}
			group maintainer: maintainer {
				responsible-for: maintaining
			}
		}
		scheme foodpicking  : foodpicking
		scheme reproducting : reproducting
		scheme maintaining  : maintaining
	}
	
    asl-path: src/agt, src/agt/inc 
    class-path: lib
}